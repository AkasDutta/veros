#!/usr/bin/env python

import sys
import os
import subprocess
import imp
import textwrap
from collections import OrderedDict

COMMANDS = OrderedDict([
    ("copy-setup", "veros-copy-setup.py"),
    ("create-mask", "veros-create-mask.py"),
    ("resubmit", "veros-resubmit.py"),
])

DOCSTRINGS = OrderedDict([(cmd, imp.load_source(cmd, os.path.join(os.path.dirname(__file__),module)).__doc__) for cmd, module in COMMANDS.items()])


def assemble_usage():
    max_width = max([len(cmd) for cmd in COMMANDS.keys()]) + 2
    format_string = "{{:<{max_width}}}{{}}".format(max_width=max_width)
    return "\n".join([
                textwrap.fill(format_string.format(cmd, doc),
                              initial_indent=" "*2,
                              subsequent_indent=" "*(max_width+3))
                for cmd, doc in DOCSTRINGS.items()
            ])


def print_usage():
    usage = "usage: veros COMMAND\n\n"
    usage += "available commands:\n"
    usage += assemble_usage()
    print(usage)


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print_usage()
        sys.exit(1)

    cmd = sys.argv[1]
    if cmd not in COMMANDS.keys():
        print("unrecongnized command '{}'\n".format(cmd))
        print_usage()
        sys.exit(1)

    cmdpath = os.path.join(os.path.dirname(__file__), COMMANDS[cmd])
    if len(sys.argv) > 2:
        sys.exit(subprocess.call([sys.executable, cmdpath] + sys.argv[2:]))
    else:
        sys.exit(subprocess.call([sys.executable, cmdpath]))
